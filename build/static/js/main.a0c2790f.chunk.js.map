{"version":3,"sources":["helperJS/LocationData.js","helperJS/UserData.js","react_components/TagIndicator/index.js","react_components/SiteMap/index.js","helperJS/userFunctionalityHelperFunctions.js","react_components/LocationPage/index.js","react_components/UserPage/index.js","react_components/Search/searchPage.js","react_components/Search/searchFormPage.js","react_components/ButtonTagIndicator/index.js","react_components/ReviewPage/index.js","react_components/LoginPage/index.js","App.js","serviceWorker.js","index.js"],"names":["LocationData","this","reviewId","locations","name","venueType","lat","lng","tags","push","id","length","avgRating","numRatings","map","tagName","val","imagePath","process","reviews","username","rating","review","locationId","filter","newVal","ind","findIndex","tagValMaps","updateTagVal","tag","target","loc","getGeoLoc","query","targets","toLowerCase","includes","UserData","users","password","uid","location_id","user_id","i","locationData","user","getUser","removeReview","forEach","TagIndicator","className","title","props","style","width","React","Component","mapStyle","height","infoWindowStyle","backgroundcolor","SiteMap","state","activePlace","showingInfoWindow","activeMarker","onMarkerMouseover","bind","onMarkerMouseout","marker","e","setState","flatMap","icon","url","Math","floor","anchor","google","maps","Point","scaledSize","Size","position","onClick","openLocPage","onMouseover","onMouseout","zoom","initialCenter","generateMarkers","visible","generateTagIndicators","GoogleApiWrapper","apiKey","showDeleteButton","currentUser","locId","deleteReview","alt","src","showDeleteUserButton","deleteUser","LocationPage","leaveReview","locData","starRatedColor","starEmptyColor","starDimension","starSpacing","openUserPage","UserPage","backToLocPage","userData","SearchPage","backToSearchPage","location","SearchForm","value","handleChange","handleSubmit","event","setSearchResult","onSubmit","type","onChange","ButtonTagIndicator","class","ReviewPage","starCount","starColor","emptyStarColor","onStarClick","generateButtonTagIndicators","nextValue","prevValue","LoginPage","pageState","pass","passVerification","login","register","prompt","handleChangeUser","handleChangePass","handleChangePassVerification","handleLoginSubmit","handleRegisterSubmit","preventDefault","handleLoginAttempt","console","log","closeHandler","renderPromptPage","renderLoginPage","renderRegisterPage","pageHandler","defaultTags","App","sidePageClass","currLocId","closeSidePage","currSearchQuery","mapClass","overlayClass","userLoggedIn","currUserId","showSearchPage","addLocation","updateTags","addUser","addReview","openSearchPage","handleLogin","closeOverlay","otherSetting","removeUser","renderExitButton","getLocationsWithQuery","getLoc","renderSidePage","renderOverlayPage","getGeoLocData","renderUserPageButton","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a0c2790f.chunk.js","sourcesContent":["\n\nclass LocationData {\n    constructor() {\n        this.reviewId = 0;\n        this.locations = [];\n    }\n\n    addLocation(name, venueType, lat, lng, tags) {\n        this.locations.push({\n            id: this.locations.length,\n            name: name,\n            venueType: venueType,\n            lat: lat,\n            lng: lng,\n            avgRating: 2.5,\n            numRatings: 0,\n            tags: tags.map((tagName) => {return {name: tagName, val: 0}}),\n            imagePath:`${process.env.PUBLIC_URL}/assets/images/venue_${this.locations.length}.jpg`,\n            reviews: []\n        });\n    };\n\n    addReview(id, username, rating, review){\n        this.locations[id].reviews.push({\n            username: username,\n            rating: rating,\n            imagePath: `${process.env.PUBLIC_URL}/assets/images/profile.png`,\n            reviewId: this.reviewId,\n            review: review\n        })\n        this.reviewId++;\n        this.locations[id].avgRating = ((this.locations[id].numRatings === 0) ? rating :\n            (this.locations[id].avgRating * this.locations[id].numRatings + rating ) / (this.locations[id].numRatings + 1));\n        this.locations[id].numRatings = this.locations[id].numRatings + 1\n    }\n\n    removeReview(locationId, reviewId) {\n        this.locations[locationId].reviews = this.locations[locationId].reviews.filter((review) => {return review.reviewId !== reviewId});\n        return this;\n    }\n\n    updateTagVal(id, tagName, newVal) {\n        const ind = this.locations[id].tags.findIndex((val) => {return val.name === tagName});\n        if (ind !== -1) {\n            this.locations[id].tags[ind].val = newVal;\n        }\n    }\n\n    updateTags(id, tagValMaps) {\n        for (let map of tagValMaps) {\n            this.updateTagVal(id, map.name, map.val);\n        }\n    }\n\n    getTags(id) {\n        this.locations[id].tags.filter((tag) => {return tag.val !== 0});\n    }\n\n    getLoc(id) {\n        return this.locations[id];\n    }\n\n    getGeoLoc(id) {\n        const target = this.locations[id];\n        return {\n            name: target.name,\n            id: id,\n            rating: target.avgRating,\n            lat: target.lat,\n            lng: target.lng,\n            tags: target.tags\n        };\n    }\n\n    getGeoLocData() {\n        return this.locations.map((loc) => {return this.getGeoLoc(loc.id)});\n    }\n\n    getLocationsWithQuery(query) {\n        const targets = [];\n        for (const loc of this.locations) {\n            const locationNameLowercase = loc.name.toLowerCase();\n            if (locationNameLowercase.includes(query.toLowerCase())) {\n                targets.push(loc);\n            }\n        }\n        return targets;\n    }\n}\n\nexport default LocationData;\n","\nclass UserData {\n    constructor() {\n        this.reviewId = 0;\n        this.users = [];\n    }\n\n    addUser(username, password) {\n        this.users.push({\n            uid: this.users.length,\n            username: username,\n            password: password,\n            imagePath: `${process.env.PUBLIC_URL}/assets/images/profile.png`,\n            reviews: [],\n        });\n    };\n\n    addReview(location_id, user_id, rating, review){\n        this.users[user_id].reviews.push({\n            username: this.users[user_id].username,\n            rating: rating,\n            review: review,\n            reviewId: this.reviewId,\n            location_id: location_id\n        })\n        this.reviewId++;\n    }\n\n    getUser(username) {\n        for (let i = 0; i < this.users.length; i++){\n            if (this.users[i].username === username){\n                return this.users[i];\n            }\n\n        }\n\n    }\n\n    removeUser(username, locationData) {\n        const user = this.getUser(username);\n\n        for (let i=0; i < user.reviews.length; i++) {\n            locationData.removeReview(user.reviews[i].location_id, user.reviews[i].reviewId);\n        }\n\n        this.users = this.users.filter((user) => {return user.username !== username});\n\n        let i = 0;\n        this.users.forEach((user) => {\n            user.uid = i;\n            i++;\n        })\n        return this;\n    }\n\n    removeReview(uid, reviewId) {\n        this.users[uid].reviews = this.users[uid].reviews.filter((review) => {return review.reviewId !== reviewId});\n        return this;\n    }\n}\n\nexport default UserData;\n","import React from 'react';\n\nimport \"./styles.css\";\n\nclass TagIndicator extends React.Component {\n  render() {\n    return (\n      <div className=\"tagContainer\" title={`${this.props.val}%`}>\n        <span className=\"tagName\">{this.props.name}</span>\n        <div className=\"filled\" style={{width:`${this.props.val}%`}}/>\n      </div>\n    );\n  }\n}\n\nexport default TagIndicator;\n\n","import React from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow} from 'google-maps-react';\n\nimport TagIndicator from './../TagIndicator';\n\n\nimport \"./styles.css\";\n\nconst mapStyle = {\n  width: '100%',\n  height: '100%'\n};\n\nconst infoWindowStyle = {\n  width: '100%',\n  height: '100%',\n  backgroundcolor: '#e0e0e0'\n};\n\n\nclass SiteMap extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      activePlace: {},\n      showingInfoWindow: false,\n      activeMarker: null\n    };\n\n    this.onMarkerMouseover = this.onMarkerMouseover.bind(this);\n    this.onMarkerMouseout = this.onMarkerMouseout.bind(this);\n  } \n  \n  onMarkerMouseover(props, marker, e) {\n    if (!this.state.showingInfoWindow) {\n      this.setState({\n        activePlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    }\n  }\n\n  onMarkerMouseout() {\n    this.setState({\n      activePlace: {},\n      showingInfoWindow: false,\n      activeMarker: null\n    })\n  }\n\n  generateTagIndicators(activePlace) {\n    if (activePlace.tags) {\n      const tags = activePlace.tags.filter((tag) => {return tag.val !== 0});\n      return tags.map((tag) => {return <TagIndicator \n                                          name={tag.name}\n                                          val={tag.val}\n                                        />\n      });\n    }\n    return;\n  }\n\n  generateMarkers() {\n    return this.props.locations.flatMap((loc) => {\n      return <Marker key={loc.id}\n                    id={loc.id}\n                    name={loc.name}\n                    icon={{\n                      url: `${process.env.PUBLIC_URL}/assets/images/markers/marker${Math.floor(loc.rating)}.png`,\n                      anchor: new this.props.google.maps.Point(32,32),\n                      scaledSize: new this.props.google.maps.Size(32,32)\n                    }}\n                    position={{\n                      lat: loc.lat,\n                      lng: loc.lng\n                    }}\n                    tags={loc.tags}\n                    onClick={() => {\n                      this.props.openLocPage(loc.id);\n                      this.onMarkerMouseout();\n                    }}\n                    onMouseover={this.onMarkerMouseover}\n                    onMouseout={this.onMarkerMouseout}\n        />\n    });\n  }\n\n\n  render() {\n    return (\n        <Map \n          google={this.props.google}\n          zoom={16}\n          style={mapStyle}\n          initialCenter={{ lat: 43.663, lng: -79.392}}>\n          {this.generateMarkers()}\n          <InfoWindow marker={this.state.activeMarker}\n                    visible={this.state.showingInfoWindow}\n                    style={infoWindowStyle}>\n              <h1 className=\"name\">{this.state.activePlace.name}</h1>\n              {this.generateTagIndicators(this.state.activePlace)}\n          </InfoWindow>\n        </Map>\n        \n    );\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyAoQit1a6-1wL8EneYqGTO4aFTfmpixG4Y'\n})(SiteMap);\n\n","export const showDeleteButton = (currentUser, username, locId, reviewId, deleteReview) => {\n  if (currentUser === \"admin\" || currentUser === username) {\n    return (<img className=\"deleteButton\" alt=\"deleteButton\" src={`${process.env.PUBLIC_URL}/assets/images/trash.png`} onClick={() => {deleteReview(username, locId, reviewId)}} title=\"Delete Review\"/>);\n  }\n  return;\n};\n\nexport const showDeleteUserButton = (currentUser, username, deleteUser) => {\n  if (currentUser === \"admin\" && username !== \"admin\" ) {\n    return (<img className=\"deleteUserButton\" alt=\"deleteUserButton\" src={`${process.env.PUBLIC_URL}/assets/images/trash.png`} onClick={() => {deleteUser(username)}} title=\"Delete User\"/>);\n  }\n  return;\n};","import React from 'react';\nimport StarRatings from 'react-star-ratings';\n\nimport TagIndicator from './../TagIndicator';\nimport { showDeleteButton } from './../../helperJS/userFunctionalityHelperFunctions';\n\nimport \"./styles.css\";\n\nclass LocationPage extends React.Component {\n\n  generateTagIndicators(tags) {\n    return tags.map((tag) => {return <TagIndicator\n                                        name={tag.name}\n                                        val={tag.val}\n                                      />\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"body\">\n        <div id=\"addReviewButton\" className=\"purpleButton\" onClick={this.props.leaveReview}>+ Review</div>\n        <img className=\"locImage\" alt=\"locationImage\" src={this.props.locData.imagePath}/>\n        <div className=\"infoContainer\">\n          <div className=\"titleContainer\">\n            <h1 id=\"nameHeader\">{this.props.locData.name}</h1>\n            <h3 id=\"venueHeader\">{this.props.locData.venueType}</h3>\n          </div>\n          <div className=\"avgRatingsContainer\">\n            <StarRatings rating={this.props.locData.avgRating}\n                        starRatedColor=\"grey\"\n                        starEmptyColor=\"darkgrey\"\n                        starDimension='2vw'\n                        starSpacing='0.2vw'/>\n            <h3 id=\"noRatings\">({this.props.locData.numRatings} Ratings)</h3>\n          </div>\n          {this.generateTagIndicators(this.props.locData.tags.filter((tag) =>\n              {return tag.val !== 0}))}\n        </div>\n        <div className=\"reviewsContainer\">\n        <h2 id=\"reviewHeader\">Reviews</h2>\n        {this.props.locData.reviews.map(review => (\n            <div className=\"review\">\n                <div className=\"profileIconContainer\">\n                    <img className=\"profileIcon\" alt=\"profileIcon\" src={review.imagePath}/>\n                </div>\n                <div className=\"usernameContainer\">\n                    <p className=\"username\" title={`Go to ${review.username}'s page`} onClick={() => {\n                      this.props.openUserPage(review.username);\n                    }}>{review.username}</p>\n                </div>\n                <div className=\"reviewRatingContainer\">\n                    <StarRatings rating={review.rating}\n                        starRatedColor=\"grey\"\n                        starEmptyColor=\"darkgrey\"\n                        starDimension='1.5vw'\n                        starSpacing='0.15vw'/>\n                    {showDeleteButton(this.props.currentUser, review.username, this.props.locData.id, review.reviewId, this.props.deleteReview)}\n                </div>\n                <div className=\"reviewContainer\">\n                    {review.review}\n                </div>\n            </div>\n        ))}\n\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default LocationPage;\n","import React from 'react';\nimport StarRatings from 'react-star-ratings';\n\nimport \"./styles.css\";\nimport { showDeleteButton, showDeleteUserButton } from './../../helperJS/userFunctionalityHelperFunctions';\n\nclass UserPage extends React.Component {\n\n  render() {\n    return (\n      <div className=\"body\">\n        <button className=\"backButton\" onClick={this.props.backToLocPage}>Back</button>\n        {showDeleteUserButton(this.props.currentUser, this.props.userData.username, this.props.deleteUser)}\n        <img className=\"profilePic\" alt=\"profilePic\" src={this.props.userData.imagePath}/>\n        <div className=\"userInfoContainer\">\n            <div className=\"userTitleContainer\">\n              <h1>{this.props.userData.username}</h1>\n              <h3>{this.props.userData.reviews.length} Review</h3>\n            </div>\n        </div>\n        <div className=\"reviewsContainer\">\n            <h2>Reviews</h2>\n            {this.props.userData.reviews.map(review => (\n                <div className=\"review\">\n                    <div className=\"profileIconContainer\">\n                        <img className=\"profileIcon\" alt=\"profileIcon\" src={this.props.locData[review.location_id].imagePath}/>\n                    </div>\n                    <div className=\"usernameContainer\" onClick={() => {this.props.openLocPage(review.location_id);}}>\n                        <strong>{this.props.locData[review.location_id].name}</strong>\n                    </div>\n                    <div className=\"reviewRatingContainer\">\n                        <StarRatings rating={review.rating}\n                            starRatedColor=\"grey\"\n                            starEmptyColor=\"darkgrey\"\n                            starDimension='20px'\n                            starSpacing='2px'/>\n                        {showDeleteButton(this.props.currentUser, this.props.userData.username , review.location_id, review.reviewId, this.props.deleteReview)}\n                    </div>\n                    <div className=\"reviewContainer\">\n                        {review.review}\n                    </div>\n                </div>\n            ))}\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default UserPage;\n","import React from 'react';\nimport StarRatings from 'react-star-ratings';\nimport TagIndicator from '../TagIndicator';\n\nimport \"./styles.css\";\n\nclass SearchPage extends React.Component {\n    \n  generateTagIndicators(tags) {\n    return tags.map((tag) => {return <TagIndicator\n                                        name={tag.name}\n                                        val={tag.val}\n                                        />\n    });\n  }\n\n  render() {\n    return(\n        <div className=\"searchResultsContainer\">\n            <h2 id=\"resultsHeader\">Results</h2>\n            <button className=\"backButton\" onClick={this.props.backToSearchPage}>Back</button>\n            {this.props.locData.map(location => (\n                <div className=\"review\">\n                    <div className=\"reviewInfoContainer\">\n\n                        <img className=\"searchLocImage\" alt=\"searchLocationImage\" src={location.imagePath}/>\n                   \n                        <div className=\"titleContainer\">\n                            \n                            <p className=\"resultTitle\" onClick={() => {\n                            this.props.openLocPage(location.id);\n                            }}>{location.name}</p>\n                            <h3 className=\"resultSubtitle\">{location.venueType}</h3>\n                        </div>\n                        <div className=\"avgRatingsContainer\">\n                            <StarRatings rating={location.avgRating}\n                                        starRatedColor=\"grey\"\n                                        starEmptyColor=\"darkgrey\"\n                                        starDimension='1.5vw'\n                                        starSpacing='0.15vw'/>\n                            <h3 className=\"resultSubtitle\">({location.numRatings} Ratings)</h3>\n                        </div>\n                        {this.generateTagIndicators(location.tags.filter((tag) =>\n                            {return tag.val !== 0}))}\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n  }   \n}\nexport default SearchPage;","import React from 'react';\n\nimport \"./styles.css\";\n\nclass SearchForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 'Search'\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    this.props.setSearchResult(this.state.value);\n  }\n\n  render() {\n    return(\n        <div className=\"searchResultsContainer\">\n            <h2>Search</h2>\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                Name:\n                <input type=\"text\" value={this.state.value} onChange={this.handleChange}/>\n                </label>\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n        </div>\n    )\n  }   \n}\nexport default SearchForm;","import React from 'react';\n\nimport \"./styles.css\";\n\nclass ButtonTagIndicator extends React.Component {\n  render() {\n    return (\n      <label className=\"tagContainer\"  title={`${this.props.val}%`}>\n        <input class=\"checkbox\"type=\"checkbox\"/>\n        <span className=\"tagName\"><span class=\"checkmark\"></span>{this.props.name}</span>\n        <div className=\"filled\" style={{width:`${this.props.val}%`}}/>\n      </label>\n    );\n  }\n}\n\nexport default ButtonTagIndicator;\n","import React from 'react';\nimport StarRatingComponent from 'react-star-rating-component';\n\nimport ButtonTagIndicator from './../ButtonTagIndicator';\n\nimport \"./styles.css\";\n\nclass ReviewPage extends React.Component {\n    constructor() {\n    super();\n\n    this.state = {\n      rating: 1\n    };\n  }\n\n  generateButtonTagIndicators(tags) {\n    return tags.map((tag) => {return <ButtonTagIndicator\n                                        name={tag.name}\n                                        val={tag.val}\n                                      />\n    });\n  }\n\n  render() {\n    const { rating } = this.state;\n    return (\n      <div className=\"body\">\n        <img className=\"locImage\" alt=\"locationImage\" src={this.props.locData.imagePath}/>\n        <button className=\"backButton\" onClick={this.props.backToLocPage}>Back</button>\n        <div className=\"infoContainer\">\n          <div className=\"titleContainer\">\n\n            <h1 id=\"nameHeader\">{this.props.locData.name}</h1>\n            <h3 id=\"venueHeader\">{this.props.locData.venueType}</h3>\n          </div>\n          <div className=\"ratingsContainer\">\n\n        <StarRatingComponent\n          name=\"rate1\"\n          starCount={5}\n          starColor={\"grey\"}\n          emptyStarColor={\"darkgrey\"}\n          value={rating}\n          onStarClick={this.onStarClick.bind(this)}\n        />\n\n          </div>\n          <p className=\"reviewPageText\">Please select safety features present</p>\n          {this.generateButtonTagIndicators(this.props.locData.tags)}\n        </div>\n        <p id=\"commentHeader\" className=\"reviewPageText\">Comments:</p>\n      <form className=\"comment\" onSubmit={this.handleSubmit}>\n        <label>\n          <textarea className=\"commentText\" type=\"text\" value={this.state.value} onChange={this.handleChange} />        </label>\n          <br></br>\n        <input id=\"submitButton\" className=\"purpleButton\" type=\"submit\" value=\"Submit\" />\n      </form>\n      </div>\n    );\n  }\n  onStarClick(nextValue, prevValue, name) {\n    this.setState({rating: nextValue});\n  }\n\n}\n\nexport default ReviewPage;\n","import React from 'react';\n\nimport \"./styles.css\";\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props) \n    this.state =  {\n      pageState: \"prompt\",\n      user: \"\",\n      pass: \"\",\n      passVerification: \"\"\n    }\n\n    this.login = this.login.bind(this);\n    this.register = this.register.bind(this);\n    this.prompt = this.prompt.bind(this);\n    this.handleChangeUser = this.handleChangeUser.bind(this);\n    this.handleChangePass = this.handleChangePass.bind(this);\n    this.handleChangePassVerification = this.handleChangePassVerification.bind(this);\n    this.handleLoginSubmit = this.handleLoginSubmit.bind(this);\n    this.handleRegisterSubmit = this.handleRegisterSubmit.bind(this);\n  }\n\n  login() {\n    this.setState({pageState: \"login\"})\n  }\n  register() {\n    this.setState({pageState: \"register\"})\n  }\n  prompt() {\n    this.setState({pageState: \"prompt\"})\n  }\n\n  handleLoginSubmit(e) {\n    e.preventDefault();\n    if(this.props.handleLoginAttempt(this.state.user, this.state.pass)) {\n      return;\n    } \n  }\n  handleRegisterSubmit(e) {\n    e.preventDefault();\n    if (this.state.pass !== this.state.passVerification) {\n      console.log(\"Failed\");\n    }\n  }\n\n  handleChangeUser(e) {\n    this.setState({user: e.target.value});\n  }\n  handleChangePass(e) {\n    this.setState({pass: e.target.value});\n  }\n  handleChangePassVerification(e) {\n    this.setState({passVerification: e.target.value});\n  }\n\n  renderPromptPage() {\n    return (<div>\n        <div className=\"backgroundLogin\" onClick={this.props.closeHandler}></div>\n        <div className=\"loginBoxContainer\">\n          <h1 className=\"loginHeader\">Do you already have an account?</h1>\n          <div className=\"loginYes\">\n            <h2>Yes</h2>\n            <div className=\"purpleButton loginPageButton\" onClick={this.login}>Login</div>\n          </div>\n          <div className=\"loginNo\">\n            <h2>No</h2>\n            <div className=\"purpleButton loginPageButton\" onClick={this.register}>Register</div>\n          </div>\n        </div>\n      </div>);\n  }\n\n  renderLoginPage() {\n    return (<div>\n        <div className=\"backgroundLogin\" onClick={this.props.closeHandler}></div>\n        <div className=\"loginBoxContainer\">\n        <button className=\"backButton\" onClick={this.prompt}>Back</button>\n        <h1 className=\"lessPadding\">Login</h1>\n        <form className=\"accForm loginForm\" onSubmit={this.handleLoginSubmit}>\n            <label>\n              Username:\n              <br></br>\n              <input type=\"text\" name=\"user\" value={this.state.user} onChange={this.handleChangeUser}/>\n            </label>\n            <br></br>\n            <br></br>\n            <label>\n              Password:\n              <br></br>\n              <input type=\"password\" name=\"pass\" value={this.state.pass} onChange={this.handleChangePass}/>\n            </label>\n            <br></br>\n            <br></br>\n            <input type=\"submit\" className=\"purpleButton loginPageButton\" value=\"Login\"/>\n          </form>\n        </div>\n      </div>);\n  }\n\n  renderRegisterPage() {\n    return (<div>\n        <div className=\"backgroundLogin\" onClick={this.props.closeHandler}></div>\n        <div className=\"loginBoxContainer\">\n          <button className=\"backButton\" onClick={this.prompt}>Back</button>\n          <h1 className=\"lessPadding\">Register</h1>\n          <form className=\"accForm registerForm\" onSubmit={this.handleRegisterSubmit}>\n            <label>\n              Username:\n              <br></br>\n              <input type=\"text\" name=\"user\" onChange={this.handleChangeUser} value={this.state.user}/>\n            </label>\n            <br></br>\n            <br></br>\n            <label>\n              Password:\n              <br></br>\n              <input type=\"password\" name=\"pass\" onChange={this.handleChangePass} value={this.state.pass}/>\n            </label>\n            <br></br>\n            <br></br>\n            <label>\n              Repeat Password:\n              <br></br>\n              <input type=\"password\" name=\"passVerification\" onChange={this.handleChangePassVerification} value={this.state.passVerification}/>\n            </label>\n            <br></br>\n            <br></br>\n            <input type=\"submit\" className=\"purpleButton loginPageButton\" value=\"Register\"/>\n          </form>\n        </div>\n      </div>);\n  }\n\n  pageHandler() {\n    if (this.state.pageState === \"prompt\") {\n      return this.renderPromptPage();\n    }\n    else if (this.state.pageState === \"login\") {\n      return this.renderLoginPage();\n    }\n    else {\n      return this.renderRegisterPage();;\n    }\n  }\n\n  render() {\n    return this.pageHandler();\n  }\n}\n\nexport default LoginPage;\n","/* New cleaned up version of App.js */\nimport React from 'react';\n\nimport './App.css';\nimport LocationData from './helperJS/LocationData';\nimport UserData from './helperJS/UserData';\nimport SiteMap from './react_components/SiteMap';\nimport LocationPage from './react_components/LocationPage';\nimport UserPage from './react_components/UserPage';\nimport SearchPage from './react_components/Search/searchPage';\nimport SearchForm from './react_components/Search/searchFormPage';\nimport ReviewPage from './react_components/ReviewPage'\nimport LoginPage from './react_components/LoginPage'\nconst defaultTags = [\"Curbside Pickup\", \"Hand Sanitizer\", \"Masks\", \"Gloves\", \"Checks Temperature\", \"Patio\"];\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mapClass: \"fullMap\",\n      overlayClass: \"none\",\n      userLoggedIn: \"\",\n      currLocId: -1,\n      currUserId: -1,\n      currSearchQuery: -1,\n      showSearchPage: false,\n      locData: new LocationData(),\n      userData: new UserData(),\n      sidePageClass:\"locPage\"\n    };\n    // Adds hardcoded location data\n    this.state.locData.addLocation(\"Sidney Smith\", \"Lecture Hall\", 43.663098, -79.398568, defaultTags);\n    this.state.locData.addLocation(\"UofT Bookstore\", \"Store\", 43.659213, -79.396960, defaultTags);\n    this.state.locData.addLocation(\"Isabel Bader Theatre\", \"Theatre\", 43.667246, -79.392524, defaultTags);\n\n    this.state.locData.updateTags(0, [{name: defaultTags[4], val: 60}, {name: defaultTags[1], val: 95}, {name: defaultTags[0], val: 20}]);\n    this.state.locData.updateTags(1, [{name: defaultTags[2], val: 42.5}, {name: defaultTags[3], val: 0.5}]);\n    this.state.locData.updateTags(2, [{name: defaultTags[5], val: 100}]);\n\n    this.state.userData.addUser(\"admin\", \"admin\")\n    this.state.userData.addUser(\"user\", \"js\")\n    this.state.userData.addUser(\"janedoe\", \"jd\")\n\n    this.state.userData.addReview(0, 1, 4.0, \"Lots of hand sanitizer on hand!\")\n    this.state.userData.addReview(0, 2, 4.5, \"Washrooms infrequently cleaned. Terrible, but I'll give a high rating for testing purposes.\")\n    this.state.locData.addReview(0, \"user\", 4.0, \"Lots of hand sanitizer on hand!\")\n    this.state.locData.addReview(0, \"janedoe\", 4.5, \"Washrooms infrequently cleaned. Terrible, but I'll give a high rating for testing purposes.\")\n\n    this.openLocPage = this.openLocPage.bind(this);\n    this.openUserPage = this.openUserPage.bind(this);\n    this.openSearchPage = this.openSearchPage.bind(this);\n    this.setSearchResult =this.setSearchResult.bind(this);\n    this.closeSidePage = this.closeSidePage.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.closeOverlay = this.closeOverlay.bind(this);\n    this.handleLoginAttempt = this.handleLoginAttempt.bind(this);\n    this.deleteReview = this.deleteReview.bind(this);\n    this.deleteUser = this.deleteUser.bind(this);\n  }\n  // Marker Handler\n  openLocPage(id) {\n    const otherSetting = (this.state.mapClass === \"fullMap\") ? \"sideMap\" : \"fullMap\";\n    this.setState({sidePageClass: \"locPage\"});\n    if (((this.state.currLocId === -1) || (this.state.currLocId === id)) && !(this.state.showSearchPage || this.state.currUserId !== -1)) {\n      this.setState({currUserId: -1, showSearchPage: false, mapClass: otherSetting, currLocId: ((this.state.currLocId === id) ? -1 : id)});\n    } else {\n      this.setState({currUserId: -1, showSearchPage: false, currLocId: id});\n    }\n  }\n  openUserPage(username) {\n    if (this.state.sidePageClass === \"userPage\" && this.state.currUserId === username) {\n      this.closeSidePage();\n    } else {\n      this.setState({currUserId: username, sidePageClass: \"userPage\", mapClass: \"sideMap\"});\n    }\n  }\n\n  openSearchPage() {\n    if (!this.state.showSearchPage) {\n      this.setState({showSearchPage: true, currSearchQuery: -1, currLocId: -1, mapClass: \"sideMap\"});\n    }\n    else {\n      this.setState({showSearchPage: false, currSearchQuery: -1, currLocId: -1, mapClass: \"fullMap\"});\n    }\n  }\n\n  setSearchResult(query) {\n    this.setState({currSearchQuery: query});\n  }\n\n  deleteReview(username, locId, id) {\n    const uid = this.state.userData.getUser(username).uid;\n    this.setState({locData: this.state.locData.removeReview(locId, id),\n                   userData: this.state.userData.removeReview(uid, id)\n    });\n  }\n\n  deleteUser(username) {\n    this.closeSidePage();\n    this.setState({userData: this.state.userData.removeUser(username, this.state.locData)});\n  }\n\n  renderExitButton() {\n    return <img className=\"exitButton\" alt='exitButton' src={`${process.env.PUBLIC_URL}/assets/images/exit.png`} title={'Close Side Panel'} onClick={this.closeSidePage}/>;\n  }\n\n  // We might want to use routers instead; this works for now.\n  renderSidePage() {\n    if (this.state.mapClass === \"sideMap\") {\n        if (this.state.showSearchPage) {\n          if (this.state.currSearchQuery === -1) {\n            return (<div className=\"sidePage\">\n              {this.renderExitButton()}\n              <SearchForm setSearchResult={this.setSearchResult}/>\n            </div>);\n          } else {\n            return (<div className=\"sidePage\">\n              {this.renderExitButton()}\n              <SearchPage locData={this.state.locData.getLocationsWithQuery(this.state.currSearchQuery)} userData={this.state.userData.getUser(this.state.currUserId)} \n              openLocPage={this.openLocPage} backToSearchPage={this.backToSearchPage} />\n            </div>);\n          }  \n        }\n        if (this.state.currUserId !== -1 && this.state.sidePageClass === 'userPage') {\n            return (<div className=\"sidePage\">\n              {this.renderExitButton()}\n              <UserPage locData={this.state.locData.locations} deleteReview={this.deleteReview} userData={this.state.userData.getUser(this.state.currUserId)}\n              currentUser={this.state.userLoggedIn} deleteUser={this.deleteUser} openLocPage={this.openLocPage} backToLocPage={this.backToLocPage}/>\n            </div>);\n        }\n        if(this.state.sidePageClass === \"leaveReviewPage\"){\n            return (<div className=\"sidePage\">\n            {this.renderExitButton()}\n            <ReviewPage locData={this.state.locData.getLoc(this.state.currLocId)} backToLocPage={this.backToLocPage}/>\n          </div>);\n        } else{\n            return (<div className=\"sidePage\">\n              {this.renderExitButton()}\n              <LocationPage locData={this.state.locData.getLoc(this.state.currLocId)} openUserPage={this.openUserPage} \n              leaveReview={this.leaveReview} currentUser={this.state.userLoggedIn} deleteReview={this.deleteReview}/>\n            </div>);\n        }\n\n    } else {\n\n      return;\n    }\n  }\n\n  // Placeholder\n  handleLoginAttempt(user, pass) {\n    if (user === \"admin\" && pass === \"admin\") {\n      this.setState({userLoggedIn: user});\n      this.closeOverlay()\n      return true;\n    }\n    else if (user === \"user\" && pass === \"user\") {\n      this.setState({userLoggedIn: user});\n      this.closeOverlay();\n      return true;\n    }\n    return false;\n  }\n  \n\n  renderOverlayPage() {\n    if (this.state.overlayClass === \"loginPage\") {\n      return (<div className=\"loginPage\">\n              <LoginPage closeHandler={this.closeOverlay} handleLoginAttempt={this.handleLoginAttempt}/>\n            </div>);\n    } else {\n      return ;\n    }\n  }\n\n  closeOverlay() {\n    this.setState({overlayClass: \"none\"})\n  }\n\n  leaveReview = () => {\n    this.setState({sidePageClass: \"leaveReviewPage\"});\n\n  }\n  backToLocPage = () => {\n    if (this.state.currLocId !== -1) {\n      this.setState({sidePageClass: \"locPage\"});\n    } else {\n      this.closeSidePage();\n    }\n  }\n\n  backToSearchPage = () => {\n    this.setState({currSearchQuery: -1});\n  }\n\n  closeSidePage() {\n    this.setState({currUserId: -1, mapClass: \"fullMap\", currLocId: -1, currSearchQuery: -1, showSearchPage: false});\n  }\n\n  handleLogin() {\n    if (this.state.userLoggedIn === \"\") {\n      this.setState({overlayClass: \"loginPage\"})\n    } else {\n      this.setState({userLoggedIn: \"\"})\n    }\n  }\n\n  renderUserPageButton() {\n    if (this.state.userLoggedIn !== \"\") {\n      return (<div id=\"userPageButton\" className=\"purpleButton\" onClick={() => {this.openUserPage(this.state.userLoggedIn)}}>\n        {`${this.state.userLoggedIn}'s Page`}\n      </div>);\n    }\n    return;\n  }\n\n  render() {\n    return (\n      <div>\n          {this.renderSidePage()}\n          {this.renderOverlayPage()}\n          <div className={this.state.mapClass}>\n          <button className = \"searchButton purpleButton\" onClick={this.openSearchPage}>Search</button>\n          <SiteMap locations={this.state.locData.getGeoLocData()} openLocPage={this.openLocPage}/>\n          {this.renderUserPageButton()}\n          <div id=\"loginButtonMain\" className=\"purpleButton\" onClick={this.handleLogin}>{(this.state.userLoggedIn === \"\") ? \"Register/Login\" : \"Logout\"}</div>\n          </div>\n      </div>\n\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}