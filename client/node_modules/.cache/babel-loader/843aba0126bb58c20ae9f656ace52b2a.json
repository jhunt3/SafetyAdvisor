{"ast":null,"code":"class UserData {\n  constructor() {\n    this.reviewId = 0;\n    this.users = [];\n  }\n\n  addUser(username, password) {\n    this.users.push({\n      uid: this.users.length,\n      username: username,\n      password: password,\n      imagePath: `${process.env.PUBLIC_URL}/assets/images/profile.png`,\n      reviews: []\n    });\n  }\n\n  addReview(location_id, user_id, rating, review) {\n    this.users[user_id].reviews.push({\n      username: this.users[user_id].username,\n      rating: rating,\n      review: review,\n      reviewId: this.reviewId,\n      location_id: location_id\n    });\n    this.reviewId++;\n  }\n\n  getUser(username) {\n    for (let i = 0; i < this.users.length; i++) {\n      if (this.users[i].username === username) {\n        return this.users[i];\n      }\n    }\n  }\n\n  removeUser(username, locationData) {\n    const user = this.getUser(username);\n\n    for (let i = 0; i < user.reviews.length; i++) {\n      locationData.removeReview(user.reviews[i].location_id, user.reviews[i].reviewId);\n    }\n\n    this.users = this.users.filter(user => {\n      return user.username !== username;\n    });\n    let i = 0;\n    this.users.forEach(user => {\n      user.uid = i;\n      i++;\n    });\n    return this;\n  }\n\n  removeReview(uid, reviewId) {\n    this.users[uid].reviews = this.users[uid].reviews.filter(review => {\n      return review.reviewId !== reviewId;\n    });\n    return this;\n  }\n\n}\n\nexport default UserData;","map":{"version":3,"sources":["/home/be6douze/Documents/CSC309/team28/client/src/helperJS/UserData.js"],"names":["UserData","constructor","reviewId","users","addUser","username","password","push","uid","length","imagePath","process","env","PUBLIC_URL","reviews","addReview","location_id","user_id","rating","review","getUser","i","removeUser","locationData","user","removeReview","filter","forEach"],"mappings":"AACA,MAAMA,QAAN,CAAe;AACXC,EAAAA,WAAW,GAAG;AACV,SAAKC,QAAL,GAAgB,CAAhB;AACA,SAAKC,KAAL,GAAa,EAAb;AACH;;AAEDC,EAAAA,OAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AACxB,SAAKH,KAAL,CAAWI,IAAX,CAAgB;AACZC,MAAAA,GAAG,EAAE,KAAKL,KAAL,CAAWM,MADJ;AAEZJ,MAAAA,QAAQ,EAAEA,QAFE;AAGZC,MAAAA,QAAQ,EAAEA,QAHE;AAIZI,MAAAA,SAAS,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW,4BAJzB;AAKZC,MAAAA,OAAO,EAAE;AALG,KAAhB;AAOH;;AAEDC,EAAAA,SAAS,CAACC,WAAD,EAAcC,OAAd,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAsC;AAC3C,SAAKhB,KAAL,CAAWc,OAAX,EAAoBH,OAApB,CAA4BP,IAA5B,CAAiC;AAC7BF,MAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWc,OAAX,EAAoBZ,QADD;AAE7Ba,MAAAA,MAAM,EAAEA,MAFqB;AAG7BC,MAAAA,MAAM,EAAEA,MAHqB;AAI7BjB,MAAAA,QAAQ,EAAE,KAAKA,QAJc;AAK7Bc,MAAAA,WAAW,EAAEA;AALgB,KAAjC;AAOA,SAAKd,QAAL;AACH;;AAEDkB,EAAAA,OAAO,CAACf,QAAD,EAAW;AACd,SAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKlB,KAAL,CAAWM,MAA/B,EAAuCY,CAAC,EAAxC,EAA2C;AACvC,UAAI,KAAKlB,KAAL,CAAWkB,CAAX,EAAchB,QAAd,KAA2BA,QAA/B,EAAwC;AACpC,eAAO,KAAKF,KAAL,CAAWkB,CAAX,CAAP;AACH;AAEJ;AAEJ;;AAEDC,EAAAA,UAAU,CAACjB,QAAD,EAAWkB,YAAX,EAAyB;AAC/B,UAAMC,IAAI,GAAG,KAAKJ,OAAL,CAAaf,QAAb,CAAb;;AAEA,SAAK,IAAIgB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGG,IAAI,CAACV,OAAL,CAAaL,MAA/B,EAAuCY,CAAC,EAAxC,EAA4C;AACxCE,MAAAA,YAAY,CAACE,YAAb,CAA0BD,IAAI,CAACV,OAAL,CAAaO,CAAb,EAAgBL,WAA1C,EAAuDQ,IAAI,CAACV,OAAL,CAAaO,CAAb,EAAgBnB,QAAvE;AACH;;AAED,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWuB,MAAX,CAAmBF,IAAD,IAAU;AAAC,aAAOA,IAAI,CAACnB,QAAL,KAAkBA,QAAzB;AAAkC,KAA/D,CAAb;AAEA,QAAIgB,CAAC,GAAG,CAAR;AACA,SAAKlB,KAAL,CAAWwB,OAAX,CAAoBH,IAAD,IAAU;AACzBA,MAAAA,IAAI,CAAChB,GAAL,GAAWa,CAAX;AACAA,MAAAA,CAAC;AACJ,KAHD;AAIA,WAAO,IAAP;AACH;;AAEDI,EAAAA,YAAY,CAACjB,GAAD,EAAMN,QAAN,EAAgB;AACxB,SAAKC,KAAL,CAAWK,GAAX,EAAgBM,OAAhB,GAA0B,KAAKX,KAAL,CAAWK,GAAX,EAAgBM,OAAhB,CAAwBY,MAAxB,CAAgCP,MAAD,IAAY;AAAC,aAAOA,MAAM,CAACjB,QAAP,KAAoBA,QAA3B;AAAoC,KAAhF,CAA1B;AACA,WAAO,IAAP;AACH;;AAzDU;;AA4Df,eAAeF,QAAf","sourcesContent":["\nclass UserData {\n    constructor() {\n        this.reviewId = 0;\n        this.users = [];\n    }\n\n    addUser(username, password) {\n        this.users.push({\n            uid: this.users.length,\n            username: username,\n            password: password,\n            imagePath: `${process.env.PUBLIC_URL}/assets/images/profile.png`,\n            reviews: [],\n        });\n    };\n\n    addReview(location_id, user_id, rating, review){\n        this.users[user_id].reviews.push({\n            username: this.users[user_id].username,\n            rating: rating,\n            review: review,\n            reviewId: this.reviewId,\n            location_id: location_id\n        })\n        this.reviewId++;\n    }\n\n    getUser(username) {\n        for (let i = 0; i < this.users.length; i++){\n            if (this.users[i].username === username){\n                return this.users[i];\n            }\n\n        }\n\n    }\n\n    removeUser(username, locationData) {\n        const user = this.getUser(username);\n\n        for (let i=0; i < user.reviews.length; i++) {\n            locationData.removeReview(user.reviews[i].location_id, user.reviews[i].reviewId);\n        }\n\n        this.users = this.users.filter((user) => {return user.username !== username});\n\n        let i = 0;\n        this.users.forEach((user) => {\n            user.uid = i;\n            i++;\n        })\n        return this;\n    }\n\n    removeReview(uid, reviewId) {\n        this.users[uid].reviews = this.users[uid].reviews.filter((review) => {return review.reviewId !== reviewId});\n        return this;\n    }\n}\n\nexport default UserData;\n"]},"metadata":{},"sourceType":"module"}