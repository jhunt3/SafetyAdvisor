{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/be6douze/Documents/CSC309/team28/client/src/react_components/SiteMap/index.js\";\nimport React from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport TagIndicator from './../TagIndicator';\nimport \"./styles.css\";\nconst mapStyle = {\n  width: '100%',\n  height: '100%'\n};\nconst hideStyle = [{\n  featureType: \"poi\",\n  elementType: \"labels\",\n  stylers: [{\n    visibility: \"off\"\n  }]\n}, {\n  featureType: \"transit\",\n  elementType: \"labels\",\n  stylers: [{\n    visibility: \"off\"\n  }]\n}];\nconst infoWindowStyle = {\n  width: '100%',\n  height: '100%',\n  backgroundcolor: '#e0e0e0'\n};\n\nclass SiteMap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activePlace: {},\n      showingInfoWindow: false,\n      activeMarker: null\n    };\n    this.onMarkerMouseover = this.onMarkerMouseover.bind(this);\n    this.onMarkerMouseout = this.onMarkerMouseout.bind(this);\n  }\n\n  onMarkerMouseover(props, marker, e) {\n    if (!this.state.showingInfoWindow) {\n      this.setState({\n        activePlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    }\n  }\n\n  onMarkerMouseout() {\n    this.setState({\n      activePlace: {},\n      showingInfoWindow: false,\n      activeMarker: null\n    });\n  }\n\n  generateTagIndicators(activePlace) {\n    if (activePlace.tags) {\n      const tags = activePlace.tags.filter(tag => {\n        return tag.val !== 0;\n      });\n      return tags.map(tag => {\n        return /*#__PURE__*/_jsxDEV(TagIndicator, {\n          name: tag.name,\n          val: tag.val\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 40\n        }, this);\n      });\n    }\n\n    return;\n  }\n\n  generateMarkers() {\n    return this.props.locations.flatMap(loc => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        id: loc.id,\n        name: loc.name,\n        icon: {\n          url: `${process.env.PUBLIC_URL}/assets/images/markers/marker${Math.floor(loc.rating)}.png`,\n          anchor: new this.props.google.maps.Point(32, 32),\n          scaledSize: new this.props.google.maps.Size(32, 32)\n        },\n        position: {\n          lat: loc.lat,\n          lng: loc.lng\n        },\n        tags: loc.tags,\n        onClick: () => {\n          this.props.openLocPage(loc.id);\n          this.onMarkerMouseout();\n        },\n        onMouseover: this.onMarkerMouseover,\n        onMouseout: this.onMarkerMouseout\n      }, loc.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 14\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Map, {\n      google: this.props.google,\n      zoom: 16,\n      style: mapStyle,\n      initialCenter: {\n        lat: 43.663,\n        lng: -79.392\n      },\n      styles: hideStyle,\n      children: [this.generateMarkers(), /*#__PURE__*/_jsxDEV(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        style: infoWindowStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"name\",\n          children: this.state.activePlace.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), this.generateTagIndicators(this.state.activePlace)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyAoQit1a6-1wL8EneYqGTO4aFTfmpixG4Y'\n})(SiteMap);","map":{"version":3,"sources":["/home/be6douze/Documents/CSC309/team28/client/src/react_components/SiteMap/index.js"],"names":["React","Map","GoogleApiWrapper","Marker","InfoWindow","TagIndicator","mapStyle","width","height","hideStyle","featureType","elementType","stylers","visibility","infoWindowStyle","backgroundcolor","SiteMap","Component","constructor","props","state","activePlace","showingInfoWindow","activeMarker","onMarkerMouseover","bind","onMarkerMouseout","marker","e","setState","generateTagIndicators","tags","filter","tag","val","map","name","generateMarkers","locations","flatMap","loc","id","url","process","env","PUBLIC_URL","Math","floor","rating","anchor","google","maps","Point","scaledSize","Size","lat","lng","openLocPage","render","apiKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow} from 'google-maps-react';\n\nimport TagIndicator from './../TagIndicator';\n\n\nimport \"./styles.css\";\n\nconst mapStyle = {\n  width: '100%',\n  height: '100%'\n};\n\nconst hideStyle = [\n    {\n        featureType: \"poi\",\n        elementType: \"labels\",\n        stylers: [{ visibility: \"off\" }]\n    },\n    {\n        featureType: \"transit\",\n        elementType: \"labels\",\n        stylers: [{ visibility: \"off\" }]\n    }\n]\n\nconst infoWindowStyle = {\n  width: '100%',\n  height: '100%',\n  backgroundcolor: '#e0e0e0'\n};\n\n\nclass SiteMap extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      activePlace: {},\n      showingInfoWindow: false,\n      activeMarker: null\n    };\n\n    this.onMarkerMouseover = this.onMarkerMouseover.bind(this);\n    this.onMarkerMouseout = this.onMarkerMouseout.bind(this);\n  }\n\n  onMarkerMouseover(props, marker, e) {\n    if (!this.state.showingInfoWindow) {\n      this.setState({\n        activePlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    }\n  }\n\n  onMarkerMouseout() {\n    this.setState({\n      activePlace: {},\n      showingInfoWindow: false,\n      activeMarker: null\n    })\n  }\n\n  generateTagIndicators(activePlace) {\n    if (activePlace.tags) {\n      const tags = activePlace.tags.filter((tag) => {return tag.val !== 0});\n      return tags.map((tag) => {return <TagIndicator\n                                          name={tag.name}\n                                          val={tag.val}\n                                        />\n      });\n    }\n    return;\n  }\n\n  generateMarkers() {\n    return this.props.locations.flatMap((loc) => {\n      return <Marker key={loc.id}\n                    id={loc.id}\n                    name={loc.name}\n                    icon={{\n                      url: `${process.env.PUBLIC_URL}/assets/images/markers/marker${Math.floor(loc.rating)}.png`,\n                      anchor: new this.props.google.maps.Point(32,32),\n                      scaledSize: new this.props.google.maps.Size(32,32)\n                    }}\n                    position={{\n                      lat: loc.lat,\n                      lng: loc.lng\n                    }}\n                    tags={loc.tags}\n                    onClick={() => {\n                      this.props.openLocPage(loc.id);\n                      this.onMarkerMouseout();\n                    }}\n                    onMouseover={this.onMarkerMouseover}\n                    onMouseout={this.onMarkerMouseout}\n        />\n    });\n  }\n\n\n  render() {\n    return (\n        <Map\n          google={this.props.google}\n          zoom={16}\n          style={mapStyle}\n          initialCenter={{ lat: 43.663, lng: -79.392}}\n          styles={hideStyle}>\n          {this.generateMarkers()}\n          <InfoWindow marker={this.state.activeMarker}\n                    visible={this.state.showingInfoWindow}\n                    style={infoWindowStyle}>\n              <h1 className=\"name\">{this.state.activePlace.name}</h1>\n              {this.generateTagIndicators(this.state.activePlace)}\n          </InfoWindow>\n        </Map>\n\n    );\n  }\n\n}\n\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyAoQit1a6-1wL8EneYqGTO4aFTfmpixG4Y'\n})(SiteMap);\n"]},"metadata":{},"sourceType":"module"}