{"ast":null,"code":"class LocationData {\n  constructor() {\n    this.reviewId = 0;\n    this.locations = [];\n  }\n\n  addLocation(name, venueType, lat, lng, tags) {\n    this.locations.push({\n      id: this.locations.length,\n      name: name,\n      venueType: venueType,\n      lat: lat,\n      lng: lng,\n      avgRating: 2.5,\n      numRatings: 0,\n      tags: tags.map(tagName => {\n        return {\n          name: tagName,\n          val: 0\n        };\n      }),\n      imagePath: `${process.env.PUBLIC_URL}/assets/images/venue_${this.locations.length}.jpg`,\n      reviews: []\n    });\n  }\n\n  addReview(id, username, rating, review) {\n    this.locations[id].reviews.push({\n      username: username,\n      rating: rating,\n      imagePath: `${process.env.PUBLIC_URL}/assets/images/profile.png`,\n      reviewId: this.reviewId,\n      review: review\n    });\n    this.reviewId++;\n    this.locations[id].avgRating = this.locations[id].numRatings === 0 ? rating : (this.locations[id].avgRating * this.locations[id].numRatings + rating) / (this.locations[id].numRatings + 1);\n    this.locations[id].numRatings = this.locations[id].numRatings + 1;\n  }\n\n  removeReview(locationId, reviewId) {\n    this.locations[locationId].reviews = this.locations[locationId].reviews.filter(review => {\n      return review.reviewId !== reviewId;\n    });\n    return this;\n  }\n\n  updateTagVal(id, tagName, newVal) {\n    const ind = this.locations[id].tags.findIndex(val => {\n      return val.name === tagName;\n    });\n\n    if (ind !== -1) {\n      this.locations[id].tags[ind].val = newVal;\n    }\n  }\n\n  updateTags(id, tagValMaps) {\n    for (let map of tagValMaps) {\n      this.updateTagVal(id, map.name, map.val);\n    }\n  }\n\n  getTags(id) {\n    this.locations[id].tags.filter(tag => {\n      return tag.val !== 0;\n    });\n  }\n\n  getLoc(id) {\n    return this.locations[id];\n  }\n\n  getGeoLoc(id) {\n    const target = this.locations[id];\n    return {\n      name: target.name,\n      id: id,\n      rating: target.avgRating,\n      lat: target.lat,\n      lng: target.lng,\n      tags: target.tags\n    };\n  }\n\n  getGeoLocData() {\n    return this.locations.map(loc => {\n      return this.getGeoLoc(loc.id);\n    });\n  }\n\n  getLocationsWithQuery(query) {\n    const targets = [];\n\n    for (const loc of this.locations) {\n      const locationNameLowercase = loc.name.toLowerCase();\n\n      if (locationNameLowercase.includes(query.toLowerCase())) {\n        targets.push(loc);\n      }\n    }\n\n    return targets;\n  }\n\n}\n\nexport default LocationData;","map":{"version":3,"sources":["/home/be6douze/Documents/CSC309/team28/client/src/helperJS/LocationData.js"],"names":["LocationData","constructor","reviewId","locations","addLocation","name","venueType","lat","lng","tags","push","id","length","avgRating","numRatings","map","tagName","val","imagePath","process","env","PUBLIC_URL","reviews","addReview","username","rating","review","removeReview","locationId","filter","updateTagVal","newVal","ind","findIndex","updateTags","tagValMaps","getTags","tag","getLoc","getGeoLoc","target","getGeoLocData","loc","getLocationsWithQuery","query","targets","locationNameLowercase","toLowerCase","includes"],"mappings":"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","sourcesContent":["\n\nclass LocationData {\n    constructor() {\n        this.reviewId = 0;\n        this.locations = [];\n    }\n\n    addLocation(name, venueType, lat, lng, tags) {\n        this.locations.push({\n            id: this.locations.length,\n            name: name,\n            venueType: venueType,\n            lat: lat,\n            lng: lng,\n            avgRating: 2.5,\n            numRatings: 0,\n            tags: tags.map((tagName) => {return {name: tagName, val: 0}}),\n            imagePath:`${process.env.PUBLIC_URL}/assets/images/venue_${this.locations.length}.jpg`,\n            reviews: []\n        });\n    };\n\n    addReview(id, username, rating, review){\n        this.locations[id].reviews.push({\n            username: username,\n            rating: rating,\n            imagePath: `${process.env.PUBLIC_URL}/assets/images/profile.png`,\n            reviewId: this.reviewId,\n            review: review\n        })\n        this.reviewId++;\n        this.locations[id].avgRating = ((this.locations[id].numRatings === 0) ? rating :\n            (this.locations[id].avgRating * this.locations[id].numRatings + rating ) / (this.locations[id].numRatings + 1));\n        this.locations[id].numRatings = this.locations[id].numRatings + 1\n    }\n\n    removeReview(locationId, reviewId) {\n        this.locations[locationId].reviews = this.locations[locationId].reviews.filter((review) => {return review.reviewId !== reviewId});\n        return this;\n    }\n\n    updateTagVal(id, tagName, newVal) {\n        const ind = this.locations[id].tags.findIndex((val) => {return val.name === tagName});\n        if (ind !== -1) {\n            this.locations[id].tags[ind].val = newVal;\n        }\n    }\n\n    updateTags(id, tagValMaps) {\n        for (let map of tagValMaps) {\n            this.updateTagVal(id, map.name, map.val);\n        }\n    }\n\n    getTags(id) {\n        this.locations[id].tags.filter((tag) => {return tag.val !== 0});\n    }\n\n    getLoc(id) {\n        return this.locations[id];\n    }\n\n    getGeoLoc(id) {\n        const target = this.locations[id];\n        return {\n            name: target.name,\n            id: id,\n            rating: target.avgRating,\n            lat: target.lat,\n            lng: target.lng,\n            tags: target.tags\n        };\n    }\n\n    getGeoLocData() {\n        return this.locations.map((loc) => {return this.getGeoLoc(loc.id)});\n    }\n\n    getLocationsWithQuery(query) {\n        const targets = [];\n        for (const loc of this.locations) {\n            const locationNameLowercase = loc.name.toLowerCase();\n            if (locationNameLowercase.includes(query.toLowerCase())) {\n                targets.push(loc);\n            }\n        }\n        return targets;\n    }\n}\n\nexport default LocationData;\n"]},"metadata":{},"sourceType":"module"}